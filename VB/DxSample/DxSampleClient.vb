'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On


'Generation date: 10/21/2015 6:10:34 AM
Namespace DxSample.Service.Models
    '''<summary>
    '''There are no comments for CustomerSingle in the schema.
    '''</summary>
    <Global.Microsoft.OData.Client.OriginalNameAttribute("CustomerSingle")>  _
    Partial Public Class CustomerSingle
        Inherits Global.Microsoft.OData.Client.DataServiceQuerySingle(Of Customer)
        ''' <summary>
        ''' Initialize a new CustomerSingle object.
        ''' </summary>
        Public Sub New(ByVal context As Global.Microsoft.OData.Client.DataServiceContext, ByVal path As String)
            MyBase.New(context, path)
        End Sub

        ''' <summary>
        ''' Initialize a new CustomerSingle object.
        ''' </summary>
        Public Sub New(ByVal context As Global.Microsoft.OData.Client.DataServiceContext, ByVal path As String, ByVal isComposable As Boolean)
            MyBase.New(context, path, isComposable)
        End Sub

        ''' <summary>
        ''' Initialize a new CustomerSingle object.
        ''' </summary>
        Public Sub New(ByVal query As Global.Microsoft.OData.Client.DataServiceQuerySingle(Of Customer))
            MyBase.New(query)
        End Sub
    End Class
    '''<summary>
    '''There are no comments for Customer in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.Key("ID")>  _
    <Global.Microsoft.OData.Client.OriginalNameAttribute("Customer")>  _
    Partial Public Class Customer
        Inherits Global.Microsoft.OData.Client.BaseEntityType
        Implements Global.System.ComponentModel.INotifyPropertyChanged
        '''<summary>
        '''Create a new Customer object.
        '''</summary>
        '''<param name="ID">Initial value of ID.</param>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Public Shared Function CreateCustomer(ByVal ID As Integer) As Customer
            Dim customer As Customer = New Customer()
            customer.ID = ID
            Return customer
        End Function
        '''<summary>
        '''There are no comments for Property ID in the schema.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        <Global.Microsoft.OData.Client.OriginalNameAttribute("ID")>  _
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                Me.OnIDChanging(value)
                Me._ID = value
                Me.OnIDChanged
                Me.OnPropertyChanged("ID")
            End Set
        End Property
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Private _ID As Integer
        Partial Private Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Name in the schema.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        <Global.Microsoft.OData.Client.OriginalNameAttribute("Name")>  _
        Public Property Name() As String
            Get
                Return Me._Name
            End Get
            Set
                Me.OnNameChanging(value)
                Me._Name = value
                Me.OnNameChanged
                Me.OnPropertyChanged("Name")
            End Set
        End Property
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Private _Name As String
        Partial Private Sub OnNameChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnNameChanged()
        End Sub
        ''' <summary>
        ''' This event is raised when the value of the property is changed
        ''' </summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Public Event PropertyChanged As Global.System.ComponentModel.PropertyChangedEventHandler Implements Global.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        ''' <summary>
        ''' The value of the property is changed
        ''' </summary>
        ''' <param name="property">property name</param>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Protected Overridable Sub OnPropertyChanged(ByVal [property] As String)
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, New Global.System.ComponentModel.PropertyChangedEventArgs([property]))
            End If
        End Sub
    End Class
    '''<summary>
    '''There are no comments for OrderSingle in the schema.
    '''</summary>
    <Global.Microsoft.OData.Client.OriginalNameAttribute("OrderSingle")>  _
    Partial Public Class OrderSingle
        Inherits Global.Microsoft.OData.Client.DataServiceQuerySingle(Of Order)
        ''' <summary>
        ''' Initialize a new OrderSingle object.
        ''' </summary>
        Public Sub New(ByVal context As Global.Microsoft.OData.Client.DataServiceContext, ByVal path As String)
            MyBase.New(context, path)
        End Sub

        ''' <summary>
        ''' Initialize a new OrderSingle object.
        ''' </summary>
        Public Sub New(ByVal context As Global.Microsoft.OData.Client.DataServiceContext, ByVal path As String, ByVal isComposable As Boolean)
            MyBase.New(context, path, isComposable)
        End Sub

        ''' <summary>
        ''' Initialize a new OrderSingle object.
        ''' </summary>
        Public Sub New(ByVal query As Global.Microsoft.OData.Client.DataServiceQuerySingle(Of Order))
            MyBase.New(query)
        End Sub
    End Class
    '''<summary>
    '''There are no comments for Order in the schema.
    '''</summary>
    '''<KeyProperties>
    '''ID
    '''</KeyProperties>
    <Global.Microsoft.OData.Client.Key("ID")>  _
    <Global.Microsoft.OData.Client.OriginalNameAttribute("Order")>  _
    Partial Public Class Order
        Inherits Global.Microsoft.OData.Client.BaseEntityType
        Implements Global.System.ComponentModel.INotifyPropertyChanged
        '''<summary>
        '''Create a new Order object.
        '''</summary>
        '''<param name="ID">Initial value of ID.</param>
        '''<param name="customerID">Initial value of CustomerID.</param>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Public Shared Function CreateOrder(ByVal ID As Integer, ByVal customerID As Integer) As Order
            Dim order As Order = New Order()
            order.ID = ID
            order.CustomerID = customerID
            Return order
        End Function
        '''<summary>
        '''There are no comments for Property ID in the schema.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        <Global.Microsoft.OData.Client.OriginalNameAttribute("ID")>  _
        Public Property ID() As Integer
            Get
                Return Me._ID
            End Get
            Set
                Me.OnIDChanging(value)
                Me._ID = value
                Me.OnIDChanged
                Me.OnPropertyChanged("ID")
            End Set
        End Property
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Private _ID As Integer
        Partial Private Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnIDChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property Name in the schema.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        <Global.Microsoft.OData.Client.OriginalNameAttribute("Name")>  _
        Public Property Name() As String
            Get
                Return Me._Name
            End Get
            Set
                Me.OnNameChanging(value)
                Me._Name = value
                Me.OnNameChanged
                Me.OnPropertyChanged("Name")
            End Set
        End Property
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Private _Name As String
        Partial Private Sub OnNameChanging(ByVal value As String)
        End Sub
        Partial Private Sub OnNameChanged()
        End Sub
        '''<summary>
        '''There are no comments for Property CustomerID in the schema.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        <Global.Microsoft.OData.Client.OriginalNameAttribute("CustomerID")>  _
        Public Property CustomerID() As Integer
            Get
                Return Me._CustomerID
            End Get
            Set
                Me.OnCustomerIDChanging(value)
                Me._CustomerID = value
                Me.OnCustomerIDChanged
                Me.OnPropertyChanged("CustomerID")
            End Set
        End Property
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Private _CustomerID As Integer
        Partial Private Sub OnCustomerIDChanging(ByVal value As Integer)
        End Sub
        Partial Private Sub OnCustomerIDChanged()
        End Sub
        ''' <summary>
        ''' This event is raised when the value of the property is changed
        ''' </summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Public Event PropertyChanged As Global.System.ComponentModel.PropertyChangedEventHandler Implements Global.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        ''' <summary>
        ''' The value of the property is changed
        ''' </summary>
        ''' <param name="property">property name</param>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Protected Overridable Sub OnPropertyChanged(ByVal [property] As String)
            If (Not (Me.PropertyChangedEvent) Is Nothing) Then
                RaiseEvent PropertyChanged(Me, New Global.System.ComponentModel.PropertyChangedEventArgs([property]))
            End If
        End Sub
    End Class
    ''' <summary>
    ''' Class containing all extension methods
    ''' </summary>
    Public Module ExtensionMethods
        ''' <summary>
        ''' Get an entity of type DxSample.Service.Models.Customer as DxSample.Service.Models.CustomerSingle specified by key from an entity set
        ''' </summary>
        ''' <param name="source">source entity set</param>
        ''' <param name="keys">dictionary with the names and values of keys</param>
        <Global.System.Runtime.CompilerServices.Extension()>
        Public Function ByKey(ByVal source As Global.Microsoft.OData.Client.DataServiceQuery(Of DxSample.Service.Models.Customer), ByVal keys As Global.System.Collections.Generic.Dictionary(Of String, Object)) As DxSample.Service.Models.CustomerSingle
            Return New DxSample.Service.Models.CustomerSingle(source.Context, source.GetKeyPath(Global.Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)))
        End Function
        ''' <summary>
        ''' Get an entity of type DxSample.Service.Models.Customer as DxSample.Service.Models.CustomerSingle specified by key from an entity set
        ''' </summary>
        ''' <param name="source">source entity set</param>
        ''' <param name="iD">The value of iD</param>
        <Global.System.Runtime.CompilerServices.Extension()>
        Public Function ByKey(ByVal source As Global.Microsoft.OData.Client.DataServiceQuery(Of DxSample.Service.Models.Customer),
            iD As Integer) As DxSample.Service.Models.CustomerSingle
            Dim keys As Global.System.Collections.Generic.Dictionary(Of String, Object) = New Global.System.Collections.Generic.Dictionary(Of String, Object)() From
            {
                { "ID", iD }
            }
            Return New DxSample.Service.Models.CustomerSingle(source.Context, source.GetKeyPath(Global.Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)))
        End Function
        ''' <summary>
        ''' Get an entity of type DxSample.Service.Models.Order as DxSample.Service.Models.OrderSingle specified by key from an entity set
        ''' </summary>
        ''' <param name="source">source entity set</param>
        ''' <param name="keys">dictionary with the names and values of keys</param>
        <Global.System.Runtime.CompilerServices.Extension()>
        Public Function ByKey(ByVal source As Global.Microsoft.OData.Client.DataServiceQuery(Of DxSample.Service.Models.Order), ByVal keys As Global.System.Collections.Generic.Dictionary(Of String, Object)) As DxSample.Service.Models.OrderSingle
            Return New DxSample.Service.Models.OrderSingle(source.Context, source.GetKeyPath(Global.Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)))
        End Function
        ''' <summary>
        ''' Get an entity of type DxSample.Service.Models.Order as DxSample.Service.Models.OrderSingle specified by key from an entity set
        ''' </summary>
        ''' <param name="source">source entity set</param>
        ''' <param name="iD">The value of iD</param>
        <Global.System.Runtime.CompilerServices.Extension()>
        Public Function ByKey(ByVal source As Global.Microsoft.OData.Client.DataServiceQuery(Of DxSample.Service.Models.Order),
            iD As Integer) As DxSample.Service.Models.OrderSingle
            Dim keys As Global.System.Collections.Generic.Dictionary(Of String, Object) = New Global.System.Collections.Generic.Dictionary(Of String, Object)() From
            {
                { "ID", iD }
            }
            Return New DxSample.Service.Models.OrderSingle(source.Context, source.GetKeyPath(Global.Microsoft.OData.Client.Serializer.GetKeyString(source.Context, keys)))
        End Function
    End Module
End Namespace
Namespace [Default]
    '''<summary>
    '''There are no comments for Container in the schema.
    '''</summary>
    <Global.Microsoft.OData.Client.OriginalNameAttribute("Container")>  _
    Partial Public Class Container
        Inherits Global.Microsoft.OData.Client.DataServiceContext
        '''<summary>
        '''Initialize a new Container object.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Public Sub New(ByVal serviceRoot As Global.System.Uri)
            MyBase.New(serviceRoot, Global.Microsoft.OData.Client.ODataProtocolVersion.V4)
            Me.ResolveName = AddressOf Me.ResolveNameFromType
            Me.ResolveType = AddressOf Me.ResolveTypeFromName
            Me.OnContextCreated
            Me.Format.LoadServiceModel = AddressOf GeneratedEdmModel.GetInstance
            Me.Format.UseJson()
        End Sub
        Partial Private Sub OnContextCreated()
        End Sub
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Private Shared ROOTNAMESPACE As String = GetType(Container).Namespace.Remove(GetType(Container).Namespace.LastIndexOf("Default"))
        '''<summary>
        '''Since the namespace configured for this service reference
        '''in Visual Studio is different from the one indicated in the
        '''server schema, use type-mappers to map between the two.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Protected Function ResolveTypeFromName(ByVal typeName As String) As Global.System.Type
            Dim resolvedType As Global.System.Type = Me.DefaultResolveType(typeName, "DxSample.Service.Models", String.Concat(ROOTNAMESPACE, "DxSample.Service.Models"))
            If (Not (resolvedType) Is Nothing) Then
                Return resolvedType
            End If
            resolvedType = Me.DefaultResolveType(typeName, "Default", String.Concat(ROOTNAMESPACE, "Default"))
            If (Not (resolvedType) Is Nothing) Then
                Return resolvedType
            End If
            Return Nothing
        End Function
        '''<summary>
        '''Since the namespace configured for this service reference
        '''in Visual Studio is different from the one indicated in the
        '''server schema, use type-mappers to map between the two.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Protected Function ResolveNameFromType(ByVal clientType As Global.System.Type) As String
            Dim originalNameAttribute As Global.Microsoft.OData.Client.OriginalNameAttribute =
                CType(Global.System.Linq.Enumerable.SingleOrDefault(Global.Microsoft.OData.Client.Utility.GetCustomAttributes(clientType, GetType(Global.Microsoft.OData.Client.OriginalNameAttribute), true)), Global.Microsoft.OData.Client.OriginalNameAttribute)
            If clientType.Namespace.Equals(String.Concat(ROOTNAMESPACE, "DxSample.Service.Models"), Global.System.StringComparison.OrdinalIgnoreCase) Then
                If (Not (originalNameAttribute) Is Nothing) Then
                    Return String.Concat("DxSample.Service.Models.", originalNameAttribute.OriginalName)
                End If
                Return String.Concat("DxSample.Service.Models.", clientType.Name)
            End If
            If clientType.Namespace.Equals(String.Concat(ROOTNAMESPACE, "Default"), Global.System.StringComparison.OrdinalIgnoreCase) Then
                If (Not (originalNameAttribute) Is Nothing) Then
                    Return String.Concat("Default.", originalNameAttribute.OriginalName)
                End If
                Return String.Concat("Default.", clientType.Name)
            End If
            Return Nothing
        End Function
        '''<summary>
        '''There are no comments for Customers in the schema.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        <Global.Microsoft.OData.Client.OriginalNameAttribute("Customers")>  _
        Public ReadOnly Property Customers() As Global.Microsoft.OData.Client.DataServiceQuery(Of DxSample.Service.Models.Customer)
            Get
                If (Me._Customers Is Nothing) Then
                    Me._Customers = MyBase.CreateQuery(Of DxSample.Service.Models.Customer)("Customers")
                End If
                Return Me._Customers
            End Get
        End Property
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Private _Customers As Global.Microsoft.OData.Client.DataServiceQuery(Of DxSample.Service.Models.Customer)
        '''<summary>
        '''There are no comments for Orders in the schema.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        <Global.Microsoft.OData.Client.OriginalNameAttribute("Orders")>  _
        Public ReadOnly Property Orders() As Global.Microsoft.OData.Client.DataServiceQuery(Of DxSample.Service.Models.Order)
            Get
                If (Me._Orders Is Nothing) Then
                    Me._Orders = MyBase.CreateQuery(Of DxSample.Service.Models.Order)("Orders")
                End If
                Return Me._Orders
            End Get
        End Property
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Private _Orders As Global.Microsoft.OData.Client.DataServiceQuery(Of DxSample.Service.Models.Order)
        '''<summary>
        '''There are no comments for Customers in the schema.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Public Sub AddToCustomers(ByVal customer As DxSample.Service.Models.Customer)
            MyBase.AddObject("Customers", customer)
        End Sub
        '''<summary>
        '''There are no comments for Orders in the schema.
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Public Sub AddToOrders(ByVal order As DxSample.Service.Models.Order)
            MyBase.AddObject("Orders", order)
        End Sub
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
        Private MustInherit Class GeneratedEdmModel
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
            Private Shared ParsedModel As Global.Microsoft.OData.Edm.IEdmModel = LoadModelFromString
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
            Private Const Edmx As String = "<edmx:Edmx Version=""4.0"" xmlns:edmx=""http://docs.oasis-open.org/odata/ns/edmx"">" & _
 "  <edmx:DataServices>" & _
 "    <Schema Namespace=""DxSample.Service.Models"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">" & _
 "      <EntityType Name=""Customer"">" & _
 "        <Key>" & _
 "          <PropertyRef Name=""ID"" />" & _
 "        </Key>" & _
 "        <Property Name=""ID"" Type=""Edm.Int32"" Nullable=""false"" />" & _
 "        <Property Name=""Name"" Type=""Edm.String"" />" & _
 "      </EntityType>" & _
 "      <EntityType Name=""Order"">" & _
 "        <Key>" & _
 "          <PropertyRef Name=""ID"" />" & _
 "        </Key>" & _
 "        <Property Name=""ID"" Type=""Edm.Int32"" Nullable=""false"" />" & _
 "        <Property Name=""Name"" Type=""Edm.String"" />" & _
 "        <Property Name=""CustomerID"" Type=""Edm.Int32"" Nullable=""false"" />" & _
 "      </EntityType>" & _
 "    </Schema>" & _
 "    <Schema Namespace=""Default"" xmlns=""http://docs.oasis-open.org/odata/ns/edm"">" & _
 "      <EntityContainer Name=""Container"">" & _
 "        <EntitySet Name=""Customers"" EntityType=""DxSample.Service.Models.Customer"" />" & _
 "        <EntitySet Name=""Orders"" EntityType=""DxSample.Service.Models.Order"" />" & _
 "      </EntityContainer>" & _
 "    </Schema>" & _
 "  </edmx:DataServices>" & _
 "</edmx:Edmx>"
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
            Public Shared Function GetInstance() As Global.Microsoft.OData.Edm.IEdmModel
                Return ParsedModel
            End Function
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
            Private Shared Function LoadModelFromString() As Global.Microsoft.OData.Edm.IEdmModel
                Dim reader As Global.System.Xml.XmlReader = CreateXmlReader(Edmx)
                Try
                    Return Global.Microsoft.OData.Edm.Csdl.EdmxReader.Parse(reader)
                Finally
                    CType(reader,Global.System.IDisposable).Dispose
                End Try
            End Function
            <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.OData.Client.Design.T4", "2.4.0")>  _
            Private Shared Function CreateXmlReader(ByVal edmxToParse As String) As Global.System.Xml.XmlReader
                Return Global.System.Xml.XmlReader.Create(New Global.System.IO.StringReader(edmxToParse))
            End Function
        End Class
    End Class
End Namespace
